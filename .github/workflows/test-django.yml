name: Test Django
# Controls when the action will run.
on:
  workflow_call:
    inputs:
    
    secrets:

env:
  SLACK_ICON: "[icon URL]"
  SLACK_COLOR: '#228B22'
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
  MSG_MINIMAL: false
  SLACK_CHANNEL: github-actions
  SLACK_USERNAME: 'Dobby'
  SLACK_FOOTER: 'Powered by House of the Elf'

jobs:
  test-django:
    name: Testing New Version
    runs-on: ubuntu-latest
    services:
      db_service:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Create Virtualenv
        run: |
          python -m venv env
          source env/bin/activate

      - name: Install basic dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade pipenv
          
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies with pipenv
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Copy secrets.json
        run: 'echo "$SECRETS" > $GITHUB_WORKSPACE/config/settings/secrets.json'
        shell: bash
        env:
          SECRETS: ${{secrets.TESTING_SECRET_CONF}}

      - name: Slack Testing Begin
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: ':tada:'
          SLACK_MESSAGE: "Excuse me Master ${{github.actor}} \n i will begin the testing ${{inputs.ECR_REPOSITORY}}/${{ inputs.ENVIRONMENT }}\n"
          SLACK_COLOR: ${{ job.status }}
      
      - name: Slack Testing
        uses: archive/github-actions-slack@v2.0.0
        id: notify-testing
        with:
          slack-optional-as_user: false
          slack-optional-username: Dobby
          slack-bot-user-oauth-access-token: ${{ secrets.BOT_SLACK_TOKEN }}
          slack-channel: ${{ secrets.BOT_SLACK_CHANNEL }}
          slack-text: https://i.gifer.com/ISm3.gif
      
      - name: Run test suite
        run: |
          pipenv run python manage.py test -v 2
        env:
          TEST_DB_HOST: localhost
          TEST_DB_NAME: postgres
          TEST_DB_PASS: postgres
          TEST_DB_PORT: 5432
          TEST_DB_USER: postgres
          
      - name: Slack Wiiii
        if: ${{ success() }}
        uses: archive/github-actions-slack@v2.0.0
        id: notify-wiii
        with:
          slack-optional-as_user: false
          slack-optional-username: Dobby
          slack-bot-user-oauth-access-token: ${{ secrets.BOT_SLACK_TOKEN }}
          slack-channel: ${{ secrets.BOT_SLACK_CHANNEL }}
          slack-text: https://i.gifer.com/5543.gif

      - name: Slack ERROR
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: 'ACTION Error :boom:'
          SLACK_MESSAGE: "Excuse me Master ${{github.actor}} \n You fail the tests ${{ inputs.ECR_REPOSITORY }}/${{ inputs.ENVIRONMENT }} \n Dont be bad with me"
          SLACK_COLOR: ${{ job.status }}